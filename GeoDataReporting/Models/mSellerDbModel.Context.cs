//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoDataReporting.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Core.Objects.DataClasses;
    using System.Linq;
    
    public partial class mSellerDemoLiveEntities : DbContext
    {
        public mSellerDemoLiveEntities()
            : base("name=mSellerDemoLiveEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tblCompany> tblCompanies { get; set; }
        public DbSet<SubOrderLog> SubOrderLogs { get; set; }
        public DbSet<tblsavesuborder> tblsavesuborders { get; set; }
        public DbSet<OrderLog> OrderLogs { get; set; }
        public DbSet<tblAdminLogin> tblAdminLogins { get; set; }
        public DbSet<TblUser> TblUsers { get; set; }
        public DbSet<FullUPdateLog> FullUPdateLogs { get; set; }
        public DbSet<tblDevice> tblDevices { get; set; }
        public DbSet<tblLicense> tblLicenses { get; set; }
        public DbSet<TblLicenseCompany> TblLicenseCompanies { get; set; }
    
        public virtual ObjectResult<UserDeviceDetail> GetUserDeviceDetail(Nullable<int> companyId, string appVersion, Nullable<bool> includeDemo)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var appVersionParameter = appVersion != null ?
                new ObjectParameter("AppVersion", appVersion) :
                new ObjectParameter("AppVersion", typeof(string));
    
            var includeDemoParameter = includeDemo.HasValue ?
                new ObjectParameter("IncludeDemo", includeDemo) :
                new ObjectParameter("IncludeDemo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDeviceDetail>("GetUserDeviceDetail", companyIdParameter, appVersionParameter, includeDemoParameter);
        }
    
        public virtual ObjectResult<UserLog> sp_UserLogs(Nullable<bool> includeDemo)
        {
            var includeDemoParameter = includeDemo.HasValue ?
                new ObjectParameter("IncludeDemo", includeDemo) :
                new ObjectParameter("IncludeDemo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLog>("sp_UserLogs", includeDemoParameter);
        }
    }
}
